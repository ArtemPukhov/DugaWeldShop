name: 🚀 Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🎯 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: 📦 Build Backend
        run: mvn clean package -DskipTests

      - name: 🎨 Build Frontend
        run: |
          cd frontend
          npm ci --legacy-peer-deps
          NEXT_IGNORE_ESLINT=1 npm run build

      - name: 🚀 Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            APP_DIR=/opt/dugaweld
            BACKEND_JAR=DugaWeldShop-1.0-SNAPSHOT.jar
            FRONTEND_DIR=frontend
            SERVICE_FILE=/etc/systemd/system/dugaweld.service
            FRONTEND_SERVICE=/etc/systemd/system/frontend.service

            echo "Creating app directory..."
            mkdir -p $APP_DIR

            echo "Stopping services..."
            sudo systemctl stop dugaweld || true
            sudo systemctl stop dugaweld-frontend || true

            echo "Copying backend JAR..."
            scp -r $GITHUB_WORKSPACE/target/$BACKEND_JAR ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:$APP_DIR/

            echo "Copying frontend source..."
            scp -r $GITHUB_WORKSPACE/frontend ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:$APP_DIR/

            echo "Writing backend systemd service..."
            sudo tee $SERVICE_FILE > /dev/null <<EOF
            [Unit]
            Description=DugaWeld Backend
            After=network.target
            
            [Service]
            User=${{ secrets.SERVER_USER }}
            WorkingDirectory=$APP_DIR
            ExecStart=/usr/bin/java -jar $APP_DIR/$BACKEND_JAR
            Environment="DB_URL=${{ secrets.DB_URL }}"
            Environment="DB_USERNAME=${{ secrets.DB_USERNAME }}"
            Environment="DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
            Restart=always
            
            [Install]
            WantedBy=multi-user.target
            EOF
            
            echo "Writing frontend systemd service..."
            sudo tee $FRONTEND_SERVICE > /dev/null <<EOF
            [Unit]
            Description=DugaWeld Frontend (Next.js)
            After=network.target
            
            [Service]
            User=${{ secrets.SERVER_USER }}
            WorkingDirectory=$APP_DIR/$FRONTEND_DIR
            ExecStart=/usr/bin/npm run start
            Restart=always
            
            [Install]
            WantedBy=multi-user.target
            EOF
            
            echo "Installing frontend dependencies and building on server..."
            cd $APP_DIR/$FRONTEND_DIR
            npm ci --legacy-peer-deps
            NEXT_IGNORE_ESLINT=1 npm run build
            
            echo "Reloading systemd and starting services..."
            sudo systemctl daemon-reload
            sudo systemctl enable dugaweld
            sudo systemctl enable dugaweld-frontend
            sudo systemctl restart dugaweld
            sudo systemctl restart dugaweld-frontend
            
            echo "Deployment finished!"
