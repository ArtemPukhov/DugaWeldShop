name: 🚀 Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # -------------------------------
      # 1️⃣ Checkout
      # -------------------------------
      - name: 🎯 Checkout code
        uses: actions/checkout@v4

      # -------------------------------
      # 2️⃣ Setup Java & Node
      # -------------------------------
      - name: ⚙️ Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      # -------------------------------
      # 3️⃣ Build Backend
      # -------------------------------
      - name: 📦 Build Backend
        run: mvn clean package -DskipTests

      # -------------------------------
      # 4️⃣ Copy Backend to server
      # -------------------------------
      - name: 📤 Copy Backend JAR to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "target/DugaWeldShop-1.0-SNAPSHOT.jar"
          target: "/opt/dugaweld/src/"

      # -------------------------------
      # 5️⃣ Copy Frontend source to server
      # -------------------------------
      - name: 📤 Copy Frontend to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend"
          target: "/opt/dugaweld/"

      # -------------------------------
      # 6️⃣ SSH: Build frontend & restart services
      # -------------------------------
      - name: 🚀 Deploy & restart services
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            APP_DIR=/opt/dugaweld
            FRONTEND_DIR=frontend
            BACKEND_JAR=src/DugaWeldShop-1.0-SNAPSHOT.jar

            # --- Stop services ---
            sudo systemctl stop dugaweld || true
            sudo systemctl stop frontend || true

            # --- Build Frontend on server ---
            cd $APP_DIR/$FRONTEND_DIR
            rm -rf node_modules .next
            npm ci --legacy-peer-deps
            NEXT_IGNORE_ESLINT=1 npm run build

            # --- Write systemd backend service ---
            sudo tee /etc/systemd/system/dugaweld.service > /dev/null <<EOF
            [Unit]
            Description=DugaWeld Backend
            After=network.target

            [Service]
            User=${{ secrets.SERVER_USER }}
            WorkingDirectory=$APP_DIR/src
            ExecStart=/usr/bin/java -jar $APP_DIR/$BACKEND_JAR
            Environment="DB_URL=${{ secrets.DB_URL }}"
            Environment="DB_USERNAME=${{ secrets.DB_USERNAME }}"
            Environment="DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOF

            # --- Write systemd frontend service ---
            sudo tee /etc/systemd/system/frontend.service > /dev/null <<EOF
            [Unit]
            Description=DugaWeld Frontend (Next.js)
            After=network.target

            [Service]
            User=${{ secrets.SERVER_USER }}
            WorkingDirectory=$APP_DIR/$FRONTEND_DIR
            ExecStart=/usr/bin/npm run start
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOF

            # --- Reload systemd and restart services ---
            sudo systemctl daemon-reload
            sudo systemctl enable dugaweld
            sudo systemctl enable frontend
            sudo systemctl restart dugaweld
            sudo systemctl restart frontend

            echo "Deployment finished!"
