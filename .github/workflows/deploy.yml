name: üöÄ Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DB_USERNAME: dugaweld
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_URL: jdbc:postgresql://localhost:5432/dugaweld

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: dugaweld
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: dugaweld
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U dugaweld"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: üéØ Checkout code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: üì¶ Build Backend
        run: mvn clean package -DskipTests
        env:
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_URL: ${{ env.DB_URL }}

      - name: üé® Install Frontend dependencies
        run: npm ci --legacy-peer-deps
        working-directory: ./frontend

      - name: üé® Build Frontend
        run: NEXT_IGNORE_ESLINT=1 npm run build
        working-directory: ./frontend

      - name: üöÄ Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            APP_DIR=/opt/dugaweld
            JAR_FILE=target/dugaweld.jar
            FRONTEND_DIR=frontend/.next

            echo "Creating app directory..."
            mkdir -p $APP_DIR

            echo "Stopping service..."
            sudo systemctl stop dugaweld || true

            echo "Copying backend..."
            scp -r $GITHUB_WORKSPACE/target/*.jar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:$APP_DIR/dugaweld.jar

            echo "Copying frontend..."
            scp -r $GITHUB_WORKSPACE/frontend/.next ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:$APP_DIR/frontend/.next

            echo "Writing environment variables..."
            cat <<EOF | sudo tee $APP_DIR/.env
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_URL=${{ secrets.DB_URL }}
            EOF

            echo "Restarting service..."
            sudo systemctl daemon-reload
            sudo systemctl start dugaweld
            sudo systemctl enable dugaweld

            echo "Deployment finished!"
