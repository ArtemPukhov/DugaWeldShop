"use client";

import React, { useState, useRef } from 'react';
import { 
  compressImage, 
  validateFileSize, 
  validateFileFormat, 
  getImageDimensions,
  formatFileSize,
  getOptimizationRecommendations,
  UPLOAD_RECOMMENDATIONS 
} from '@/lib/imageOptimization';

interface ImageUploaderProps {
  onFileSelect: (file: File | null) => void;
  currentImageUrl?: string;
  type: 'category' | 'product';
  disabled?: boolean;
  onRemoveCurrentImage?: () => void;
}

export default function ImageUploader({ 
  onFileSelect, 
  currentImageUrl, 
  type, 
  disabled = false,
  onRemoveCurrentImage
}: ImageUploaderProps) {
  const [selectedFile, setSelectedFile] = useState<File | null>(null);
  const [previewUrl, setPreviewUrl] = useState<string | null>(null);
  const [isCompressing, setIsCompressing] = useState(false);
  const [recommendations, setRecommendations] = useState<any>(null);
  const [error, setError] = useState<string | null>(null);
  const fileInputRef = useRef<HTMLInputElement>(null);

  const maxSize = type === 'category' ? 
    UPLOAD_RECOMMENDATIONS.categories.maxFileSize : 
    UPLOAD_RECOMMENDATIONS.products.maxFileSize;

  const maxSizeFormatted = type === 'category' ? 
    UPLOAD_RECOMMENDATIONS.categories.maxFileSizeFormatted : 
    UPLOAD_RECOMMENDATIONS.products.maxFileSizeFormatted;

  const recommendedSize = type === 'category' ? 
    UPLOAD_RECOMMENDATIONS.categories.recommended : 
    UPLOAD_RECOMMENDATIONS.products.recommended;

  const handleFileSelect = async (file: File) => {
    setError(null);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞
    if (!validateFileFormat(file)) {
      setError('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JPG, PNG –∏–ª–∏ WebP.');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—á–µ–Ω—å –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ (–±–æ–ª—å—à–µ 10MB)
    if (file.size > 10 * 1024 * 1024) {
      setError(`–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB`);
      return;
    }

    try {
      setIsCompressing(true);
      
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      const recs = await getOptimizationRecommendations(file);
      setRecommendations(recs);

      // –í—Å–µ–≥–¥–∞ —Å–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      const processedFile = await compressImage(
        file, 
        type === 'category' ? 400 : 800,
        type === 'category' ? 300 : 600,
        0.85
      );
      
      setIsCompressing(false);
      setSelectedFile(processedFile);
      
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é
      const url = URL.createObjectURL(processedFile);
      setPreviewUrl(url);
      
      onFileSelect(processedFile);
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ' + (err as Error).message);
      setIsCompressing(false);
    }
  };

  const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      handleFileSelect(file);
    }
  };

  const handleRemoveImage = () => {
    setSelectedFile(null);
    setPreviewUrl(null);
    setRecommendations(null);
    setError(null);
    onFileSelect(null);
    
    if (fileInputRef.current) {
      fileInputRef.current.value = '';
    }
  };

  const handleRemoveCurrentImage = () => {
    if (onRemoveCurrentImage) {
      onRemoveCurrentImage();
    }
    onFileSelect(null);
  };

  return (
    <div className="space-y-4">
      {/* –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-2">
          {type === 'category' ? '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' : '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'}
        </label>
        
        <input
          ref={fileInputRef}
          type="file"
          accept="image/jpeg,image/jpg,image/png,image/webp"
          onChange={handleFileInputChange}
          disabled={disabled || isCompressing}
          className="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 disabled:opacity-50"
        />
        
        <p className="text-xs text-gray-500 mt-1">
          –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: {recommendedSize} | 
          –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {maxSizeFormatted} | 
          –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: {type === 'category' ? 
            UPLOAD_RECOMMENDATIONS.categories.formats : 
            UPLOAD_RECOMMENDATIONS.products.formats}
        </p>
        <p className="text-xs text-blue-600 mt-1">
          üí° –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∂–∞—Ç–æ –¥–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        </p>
      </div>

      {/* –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {isCompressing && (
        <div className="flex items-center space-x-2 text-blue-600 bg-blue-50 p-3 rounded-md">
          <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600"></div>
          <span className="text-sm">–°–∂–∞—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...</span>
        </div>
      )}

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ */}
      {recommendations && (
        <div className={`p-3 rounded-md text-sm ${
          recommendations.needsCompression 
            ? 'bg-yellow-50 text-yellow-800 border border-yellow-200' 
            : 'bg-green-50 text-green-800 border border-green-200'
        }`}>
          <div className="font-medium mb-1">
            {recommendations.needsCompression ? '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:' : '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ‚úì'}
          </div>
          <div className="space-y-1">
            <div>–¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: {recommendations.currentSize}</div>
            {recommendations.needsCompression && (
              <div>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: {recommendations.recommendedSize}</div>
            )}
            {recommendations.compressionRatio < 1 && (
              <div>–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∂–∞—Ç–∏—è: {(recommendations.compressionRatio * 100).toFixed(0)}%</div>
            )}
          </div>
        </div>
      )}

      {/* –û—à–∏–±–∫–∏ */}
      {error && (
        <div className="p-3 rounded-md bg-red-50 text-red-800 border border-red-200 text-sm">
          {error}
        </div>
      )}

      {/* –ü—Ä–µ–≤—å—é –Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
      {previewUrl && (
        <div className="space-y-2">
          <div className="flex items-center justify-between">
            <span className="text-sm font-medium text-gray-700">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:</span>
            <button
              type="button"
              onClick={handleRemoveImage}
              className="text-sm text-red-600 hover:text-red-800"
            >
              –£–¥–∞–ª–∏—Ç—å
            </button>
          </div>
          <div className="relative">
            <img
              src={previewUrl}
              alt="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä"
              className="w-32 h-32 object-cover rounded border"
            />
            {selectedFile && (
              <div className="absolute bottom-0 left-0 right-0 bg-black bg-opacity-50 text-white text-xs p-1 rounded-b">
                {formatFileSize(selectedFile.size)}
              </div>
            )}
          </div>
        </div>
      )}

      {/* –¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
      {currentImageUrl && !previewUrl && (
        <div className="space-y-2">
          <div className="flex items-center justify-between">
            <span className="text-sm font-medium text-gray-700">–¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</span>
            <button
              type="button"
              onClick={handleRemoveCurrentImage}
              className="text-sm text-red-600 hover:text-red-800"
            >
              –£–¥–∞–ª–∏—Ç—å
            </button>
          </div>
          <div className="relative">
            <img
              src={currentImageUrl}
              alt="–¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
              className="w-32 h-32 object-cover rounded border"
            />
          </div>
        </div>
      )}
    </div>
  );
}
